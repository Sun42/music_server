Installation note
cd <root_dir>
sudo apt-get install python-virtualenv
sudo apt-get install python-dev
sudo apt-get install nginx
virtualenv flask
./flask/bin/activate
./flask/bin/pip install flask
./flask.bin/pip install pytube
./flask/bin/pip install moviepy
./flask/bin/pip install nosetests
./flask/bin/pip install -U flask-cors
./flask/bin/pip install mock
./flask/bin/pip install uwsgi

# objbrowser requires PyQT4, SIP
sudo apt-get install python2.7-dev libxext-dev qt4-dev-tools build-essential
# download and compile SIP and PyQt4
 ./flask/bin/pip install objbrowser

# cd ./flask/tmp/
# git clone git://github.com/tuffy/python-audio-tools.git .


Launch app:
cd <app_dir>
./flask/bin/python ./music_server/music_server.py

Call app :
curl -i http://localhost:5000/songs/download/PRATOS/UNIVERS

Launch wsgi
cd <app_dir>
sudo ../flask/bin/uwsgi --ini my_uwsgi.ini

Run all tests :
cd <app_dir>
./flask/bin/nosetests --nocapture --nologcapture --verbosity=3 ./tests

Run a single file :
cd <app_dir>
./flask/bin/nosetests --nocapture --nologcapture --verbosity=3 /tests/converter_tests.py

Run a single test:
cd <app_dir>
./flask/bin/nosetests --nocapture --nologcapture --verbosity=3 ./tests/download_tests.py:DownloadTestCase.test_format_youtube_query

Application structure :
http://docs.python-guide.org/en/latest/writing/structure/

Flask tutorial:
http://blog.miguelgrinberg.com/post/designing-a-restful-api-with-python-and-flask

Nosetests reference :
http://nose.readthedocs.io/

Uwsgi/Nginx installation:
https://www.digitalocean.com/community/tutorials/how-to-serve-flask-applications-with-uwsgi-and-nginx-on-ubuntu-14-04
https://code-maven.com/deploying-python-flask-using-uwsgi-on-ubuntu-14-04
http://vladikk.com/2013/09/12/serving-flask-with-nginx-on-ubuntu/